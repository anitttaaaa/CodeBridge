plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = 'pl.zajavka'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// thymeleaf
	implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6:${thymeleafExtrasSpringsecurity6Version}"
	implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:${thymeleafLayoutDialectVersion}"


// db
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'

//	annotations
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	// Flying Saucer PDF rendering
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.11.2'

	// iText (iText 7, ale sprawdź zależności)
	implementation 'com.itextpdf:itext7-core:9.0.0'

	// SLF4J for logging (Flying Saucer needs it)
	runtimeOnly 'org.slf4j:slf4j-simple:1.7.32'  // Użyj nowszej wersji SLF4J

//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
	archiveFileName = "myapp.${archiveExtension.get()}"
}

jar {
	enabled = false
}


tasks.named('test') {
	useJUnitPlatform()
}
